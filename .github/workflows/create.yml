name: Create
run-name: ${{ github.actor }} create

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        type: environment
        required: true

jobs:
  Create:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:

      - name: Report Header
        run: |
          echo "The job was triggered by a ${{ github.event_name }} event."
          echo "The operating system this job is now running on is ${{ runner.os }}."
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "The runner environment is ${{ runner.environment }}"

      - name: Repository Code Checkout
        uses: actions/checkout@v4

      - name: Install OpenTofu
        run: |
          curl --proto '=https' --tlsv1.2 -fsSL https://get.opentofu.org/install-opentofu.sh -o install-opentofu.sh
          chmod +x install-opentofu.sh
          ./install-opentofu.sh --install-method standalone

      - name: Initialize
        working-directory: ./tofu
        run: tofu init

      - name: Plan Deployment
        working-directory: ./tofu
        env:
          TF_VAR_server_admin_steamid: ${{ secrets.TF_VAR_server_admin_steamid }}
          TF_VAR_server_name: ${{ secrets.TF_VAR_server_name }}
          TF_VAR_password: ${{ secrets.TF_VAR_password }}
          TF_VAR_root_pass: ${{ secrets.TF_VAR_root_pass }}
          TF_VAR_authorized_keys: ${{ secrets.TF_VAR_authorized_keys }}
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          TF_VAR_admin_ssh_ip: ${{ secrets.TF_VAR_admin_ssh_ip }}
        run: tofu plan -out=plan_file

      - name: Apply Deployment
        working-directory: ./tofu
        env:
          TF_VAR_server_admin_steamid: ${{ secrets.TF_VAR_server_admin_steamid }}
          TF_VAR_server_name: ${{ secrets.TF_VAR_server_name }}
          TF_VAR_password: ${{ secrets.TF_VAR_password }}
          TF_VAR_root_pass: ${{ secrets.TF_VAR_root_pass }}
          TF_VAR_authorized_keys: ${{ secrets.TF_VAR_authorized_keys }}
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          TF_VAR_admin_ssh_ip: ${{ secrets.TF_VAR_admin_ssh_ip }}
        run: tofu apply plan_file

      - name: Upload OpenTofu State
        uses: actions/upload-artifact@v4
        with:
          name: terraform.tfstate
          path: ./tofu/terraform.tfstate

      - name: Status
        run: echo "This job's status is ${{ job.status }}."
  
  Destroy:
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}-destroy"
    needs: Create
    steps:
      - name: Install OpenTofu
        run: |
          curl --proto '=https' --tlsv1.2 -fsSL https://get.opentofu.org/install-opentofu.sh -o install-opentofu.sh
          chmod +x install-opentofu.sh
          ./install-opentofu.sh --install-method standalone

      - name: Repository Code Checkout
        uses: actions/checkout@v4

      - name: Initialize
        working-directory: ./tofu
        run: tofu init
    
      - name: Download OpenTofu State
        uses: actions/download-artifact@v4
        with:
          name: terraform.tfstate
          path: ./tofu/terraform.tfstate

      - name: Destroy
        working-directory: ./tofu
        env:
          TF_VAR_server_admin_steamid: ${{ secrets.TF_VAR_server_admin_steamid }}
          TF_VAR_server_name: ${{ secrets.TF_VAR_server_name }}
          TF_VAR_password: ${{ secrets.TF_VAR_password }}
          TF_VAR_root_pass: ${{ secrets.TF_VAR_root_pass }}
          TF_VAR_authorized_keys: ${{ secrets.TF_VAR_authorized_keys }}
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          TF_VAR_admin_ssh_ip: ${{ secrets.TF_VAR_admin_ssh_ip }}
        run: tofu destroy -auto-approve
